{
  "address": "0xcB6B81E02C67C0dea1F8352A4F37B6f0eAF7BEd0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AgentAuthorized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AgentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "TokensFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "agents",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "authorizeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fundTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAgent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "removeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x20360c8fad59cf87f253856b2b1ac661669249bacea517c0de1c8af79e987988",
  "receipt": {
    "to": null,
    "from": "0x7d971C39bb700AcEc20879D46f092dC0DB1dbF9E",
    "contractAddress": "0xcB6B81E02C67C0dea1F8352A4F37B6f0eAF7BEd0",
    "transactionIndex": 1,
    "gasUsed": "1197375",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000008000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001000000000000080000000000000000000000020000000000000000000800000000000000000000000000000000400000000004000000000000000000080000000000000000008000000000000000000000000000000000000000000000000000000000000020000000004000000000000000000000000000000000000000000000000000000000000000000420000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x838054ccfd98fb32c64127b06ab8b391767c37c6ec1a8d1d70c25cf408493454",
    "transactionHash": "0x20360c8fad59cf87f253856b2b1ac661669249bacea517c0de1c8af79e987988",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 19134095,
        "transactionHash": "0x20360c8fad59cf87f253856b2b1ac661669249bacea517c0de1c8af79e987988",
        "address": "0xcB6B81E02C67C0dea1F8352A4F37B6f0eAF7BEd0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007d971c39bb700acec20879d46f092dc0db1dbf9e"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x838054ccfd98fb32c64127b06ab8b391767c37c6ec1a8d1d70c25cf408493454"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 19134095,
        "transactionHash": "0x20360c8fad59cf87f253856b2b1ac661669249bacea517c0de1c8af79e987988",
        "address": "0xcB6B81E02C67C0dea1F8352A4F37B6f0eAF7BEd0",
        "topics": [
          "0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339",
          "0x0000000000000000000000007d971c39bb700acec20879d46f092dc0db1dbf9e"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x838054ccfd98fb32c64127b06ab8b391767c37c6ec1a8d1d70c25cf408493454"
      }
    ],
    "blockNumber": 19134095,
    "cumulativeGasUsed": "1241238",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7d971C39bb700AcEc20879D46f092dC0DB1dbF9E"
  ],
  "numDeployments": 1,
  "solcInputHash": "6fd192ff9b6125f1ee34972b152b68a5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"AgentAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"}],\"name\":\"TokensFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"authorizeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a role-based system with Owner, Admins, and Agents Owner: Contract deployer, can manage admins Admins: Can manage agents Agents: AI-powered reward distributors\",\"events\":{\"AdminAdded(address)\":{\"params\":{\"admin\":\"Address of the new admin\"}},\"AdminRemoved(address)\":{\"params\":{\"admin\":\"Address of the removed admin\"}},\"AgentAuthorized(address,address)\":{\"params\":{\"addedBy\":\"Admin who authorized the agent\",\"agent\":\"Address of the new agent\"}},\"AgentRemoved(address,address)\":{\"params\":{\"agent\":\"Address of the removed agent\",\"removedBy\":\"Admin who removed the agent\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Only callable by contract owner\",\"params\":{\"newAdmin\":\"Address to be added as admin\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"authorizeAgent(address)\":{\"details\":\"Only callable by admins\",\"params\":{\"agent\":\"Address to be authorized as agent\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"initialAdmin\":\"Address of the first admin\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"fundTokens(address,uint256)\":{\"details\":\"Only callable by admins or agents\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to receive the minted tokens\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isAdmin(address)\":{\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"bool True if address is admin\"}},\"isAgent(address)\":{\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"bool True if address is agent\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAdmin(address)\":{\"details\":\"Only callable by contract owner\",\"params\":{\"admin\":\"Address to be removed from admins\"}},\"removeAgent(address)\":{\"details\":\"Only callable by admins\",\"params\":{\"agent\":\"Address to be removed from agents\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NatureToken\",\"version\":1},\"userdoc\":{\"events\":{\"AdminAdded(address)\":{\"notice\":\"Emitted when a new admin is added\"},\"AdminRemoved(address)\":{\"notice\":\"Emitted when an admin is removed\"},\"AgentAuthorized(address,address)\":{\"notice\":\"Emitted when a new agent is authorized\"},\"AgentRemoved(address,address)\":{\"notice\":\"Emitted when an agent is removed\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Add a new admin\"},\"authorizeAgent(address)\":{\"notice\":\"Authorize a new agent\"},\"constructor\":{\"notice\":\"Contract constructor\"},\"fundTokens(address,uint256)\":{\"notice\":\"Mint tokens to specified address\"},\"isAdmin(address)\":{\"notice\":\"Check if an address is an admin\"},\"isAgent(address)\":{\"notice\":\"Check if an address is an agent\"},\"removeAdmin(address)\":{\"notice\":\"Remove an admin\"},\"removeAgent(address)\":{\"notice\":\"Remove an agent\"}},\"notice\":\"ERC20 token for Nature Quest's reward system on Mode Network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NatureToken.sol\":\"NatureToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/NatureToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title NatureToken\\n * @notice ERC20 token for Nature Quest's reward system on Mode Network\\n * @dev Implements a role-based system with Owner, Admins, and Agents\\n * Owner: Contract deployer, can manage admins\\n * Admins: Can manage agents\\n * Agents: AI-powered reward distributors\\n */\\ncontract NatureToken is ERC20, Ownable, ReentrancyGuard {\\n    // Role management\\n    mapping(address => bool) public admins;\\n    mapping(address => bool) public agents;\\n\\n    event TokensFunded(address indexed to, uint256 amount, address indexed by);\\n    /**\\n     * @notice Emitted when a new admin is added\\n     * @param admin Address of the new admin\\n     */\\n    event AdminAdded(address indexed admin);\\n\\n    /**\\n     * @notice Emitted when an admin is removed\\n     * @param admin Address of the removed admin\\n     */\\n    event AdminRemoved(address indexed admin);\\n\\n    /**\\n     * @notice Emitted when a new agent is authorized\\n     * @param agent Address of the new agent\\n     * @param addedBy Admin who authorized the agent\\n     */\\n    event AgentAuthorized(address indexed agent, address indexed addedBy);\\n\\n    /**\\n     * @notice Emitted when an agent is removed\\n     * @param agent Address of the removed agent\\n     * @param removedBy Admin who removed the agent\\n     */\\n    event AgentRemoved(address indexed agent, address indexed removedBy);\\n\\n    modifier onlyAdmin() {\\n        require(admins[msg.sender], \\\"NatureToken: caller is not admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyAgent() {\\n        require(agents[msg.sender], \\\"NatureToken: caller is not agent\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdminOrAgent() {\\n        require(admins[msg.sender] || agents[msg.sender], \\\"NatureToken: caller is not admin or agent\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Contract constructor\\n     * @param initialAdmin Address of the first admin\\n     */\\n    constructor(address initialAdmin) ERC20(\\\"NATURE\\\", \\\"NTR\\\") Ownable() {\\n        require(initialAdmin != address(0), \\\"NatureToken: invalid admin address\\\");\\n        admins[initialAdmin] = true;\\n        emit AdminAdded(initialAdmin);\\n    }\\n\\n    /**\\n     * @notice Add a new admin\\n     * @dev Only callable by contract owner\\n     * @param newAdmin Address to be added as admin\\n     */\\n    function addAdmin(address newAdmin) external onlyOwner {\\n        require(newAdmin != address(0), \\\"NatureToken: invalid admin address\\\");\\n        require(!admins[newAdmin], \\\"NatureToken: already admin\\\");\\n        admins[newAdmin] = true;\\n        emit AdminAdded(newAdmin);\\n    }\\n\\n    /**\\n     * @notice Remove an admin\\n     * @dev Only callable by contract owner\\n     * @param admin Address to be removed from admins\\n     */\\n    function removeAdmin(address admin) external onlyOwner {\\n        require(admins[admin], \\\"NatureToken: not admin\\\");\\n        admins[admin] = false;\\n        emit AdminRemoved(admin);\\n    }\\n\\n    /**\\n     * @notice Authorize a new agent\\n     * @dev Only callable by admins\\n     * @param agent Address to be authorized as agent\\n     */\\n    function authorizeAgent(address agent) external onlyAdmin {\\n        require(agent != address(0), \\\"NatureToken: invalid agent address\\\");\\n        require(!agents[agent], \\\"NatureToken: already agent\\\");\\n        agents[agent] = true;\\n        emit AgentAuthorized(agent, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Remove an agent\\n     * @dev Only callable by admins\\n     * @param agent Address to be removed from agents\\n     */\\n    function removeAgent(address agent) external onlyAdmin {\\n        require(agents[agent], \\\"NatureToken: not agent\\\");\\n        agents[agent] = false;\\n        emit AgentRemoved(agent, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Mint tokens to specified address\\n     * @dev Only callable by admins or agents\\n     * @param to Address to receive the minted tokens\\n     * @param amount Amount of tokens to mint\\n     */\\n    function fundTokens(address to, uint256 amount) external onlyAdminOrAgent nonReentrant {\\n        require(to != address(0), \\\"NatureToken: invalid recipient\\\");\\n        require(amount > 0, \\\"NatureToken: invalid amount\\\");\\n\\n        _mint(to, amount);\\n        emit TokensFunded(to, amount, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Check if an address is an admin\\n     * @param account Address to check\\n     * @return bool True if address is admin\\n     */\\n    function isAdmin(address account) external view returns (bool) {\\n        return admins[account];\\n    }\\n\\n    /**\\n     * @notice Check if an address is an agent\\n     * @param account Address to check\\n     * @return bool True if address is agent\\n     */\\n    function isAgent(address account) external view returns (bool) {\\n        return agents[account];\\n    }\\n}\\n\",\"keccak256\":\"0x154211838cec6be4d8d69b346843ba3967a6c7ed13cacbdbb8034a6ccb634ae1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620015cf380380620015cf8339810160408190526200003491620001bd565b604051806040016040528060068152602001654e415455524560d01b81525060405180604001604052806003815260200162272a2960e91b815250816003908162000080919062000294565b5060046200008f828262000294565b505050620000ac620000a66200016760201b60201c565b6200016b565b60016006556001600160a01b038116620001175760405162461bcd60e51b815260206004820152602260248201527f4e6174757265546f6b656e3a20696e76616c69642061646d696e206164647265604482015261737360f01b606482015260840160405180910390fd5b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a25062000360565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620001d057600080fd5b81516001600160a01b0381168114620001e857600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021a57607f821691505b6020821081036200023b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028f57600081815260208120601f850160051c810160208610156200026a5750805b601f850160051c820191505b818110156200028b5782815560010162000276565b5050505b505050565b81516001600160401b03811115620002b057620002b0620001ef565b620002c881620002c1845462000205565b8462000241565b602080601f831160018114620003005760008415620002e75750858301515b600019600386901b1c1916600185901b1785556200028b565b600085815260208120601f198616915b82811015620003315788860151825594840194600190910190840162000310565b5085821015620003505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61125f80620003706000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370480275116100c3578063a457c2d71161007c578063a457c2d7146102f7578063a9059cbb1461030a578063dd62ed3e1461031d578063ddb5975114610330578063f2fde38b14610343578063fd66091e1461035657600080fd5b8063704802751461027d57806370a0823114610290578063715018a6146102b95780638da5cb5b146102c157806395d89b41146102dc57806397a6278e146102e457600080fd5b806323b872dd1161011557806323b872dd146101e657806324d7806c146101f9578063313ce567146102255780633950935114610234578063429b62e5146102475780636d88b24d1461026a57600080fd5b806306fdde0314610152578063095ea7b3146101705780631785f53c1461019357806318160ddd146101a85780631ffbb064146101ba575b600080fd5b61015a610379565b60405161016791906110a9565b60405180910390f35b61018361017e366004611113565b61040b565b6040519015158152602001610167565b6101a66101a136600461113d565b610425565b005b6002545b604051908152602001610167565b6101836101c836600461113d565b6001600160a01b031660009081526008602052604090205460ff1690565b6101836101f436600461115f565b6104dc565b61018361020736600461113d565b6001600160a01b031660009081526007602052604090205460ff1690565b60405160128152602001610167565b610183610242366004611113565b610500565b61018361025536600461113d565b60076020526000908152604090205460ff1681565b6101a661027836600461113d565b610522565b6101a661028b36600461113d565b610699565b6101ac61029e36600461113d565b6001600160a01b031660009081526020819052604090205490565b6101a66107b7565b6005546040516001600160a01b039091168152602001610167565b61015a6107cb565b6101a66102f236600461113d565b6107da565b610183610305366004611113565b6108e5565b610183610318366004611113565b610960565b6101ac61032b36600461119b565b61096e565b6101a661033e366004611113565b610999565b6101a661035136600461113d565b610b2a565b61018361036436600461113d565b60086020526000908152604090205460ff1681565b606060038054610388906111ce565b80601f01602080910402602001604051908101604052809291908181526020018280546103b4906111ce565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b600033610419818585610ba3565b60019150505b92915050565b61042d610cc7565b6001600160a01b03811660009081526007602052604090205460ff166104935760405162461bcd60e51b81526020600482015260166024820152752730ba3ab932aa37b5b2b71d103737ba1030b236b4b760511b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260076020526040808220805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f9190a250565b6000336104ea858285610d21565b6104f5858585610d9b565b506001949350505050565b600033610419818585610513838361096e565b61051d9190611208565b610ba3565b3360009081526007602052604090205460ff166105815760405162461bcd60e51b815260206004820181905260248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015260640161048a565b6001600160a01b0381166105e25760405162461bcd60e51b815260206004820152602260248201527f4e6174757265546f6b656e3a20696e76616c6964206167656e74206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b03811660009081526008602052604090205460ff161561064b5760405162461bcd60e51b815260206004820152601a60248201527f4e6174757265546f6b656e3a20616c7265616479206167656e74000000000000604482015260640161048a565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055513392917fa0ab0df49b9b83562b0f6f42b7ee4cf49522b8f506e687d6b0e55d729613272e91a350565b6106a1610cc7565b6001600160a01b0381166107025760405162461bcd60e51b815260206004820152602260248201527f4e6174757265546f6b656e3a20696e76616c69642061646d696e206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b03811660009081526007602052604090205460ff161561076b5760405162461bcd60e51b815260206004820152601a60248201527f4e6174757265546f6b656e3a20616c72656164792061646d696e000000000000604482015260640161048a565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b6107bf610cc7565b6107c96000610f3f565b565b606060048054610388906111ce565b3360009081526007602052604090205460ff166108395760405162461bcd60e51b815260206004820181905260248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015260640161048a565b6001600160a01b03811660009081526008602052604090205460ff1661089a5760405162461bcd60e51b815260206004820152601660248201527513985d1d5c99551bdad95b8e881b9bdd081859d95b9d60521b604482015260640161048a565b6001600160a01b038116600081815260086020526040808220805460ff19169055513392917f4ce8b3fe8e0bf47a6fefbecdfd7c799755cede6061655521b10fc2e4b1fcc6b391a350565b600033816108f3828661096e565b9050838110156109535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161048a565b6104f58286868403610ba3565b600033610419818585610d9b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360009081526007602052604090205460ff16806109c657503360009081526008602052604090205460ff165b610a245760405162461bcd60e51b815260206004820152602960248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015268081bdc881859d95b9d60ba1b606482015260840161048a565b610a2c610f91565b6001600160a01b038216610a825760405162461bcd60e51b815260206004820152601e60248201527f4e6174757265546f6b656e3a20696e76616c696420726563697069656e740000604482015260640161048a565b60008111610ad25760405162461bcd60e51b815260206004820152601b60248201527f4e6174757265546f6b656e3a20696e76616c696420616d6f756e740000000000604482015260640161048a565b610adc8282610fea565b60405181815233906001600160a01b038416907fe89b93cedab3d9ce98a9b35004e19ddf26ee16a3c13abbbdea4a1f6b353674e29060200160405180910390a3610b266001600655565b5050565b610b32610cc7565b6001600160a01b038116610b975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048a565b610ba081610f3f565b50565b6001600160a01b038316610c055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048a565b6001600160a01b038216610c665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146107c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048a565b6000610d2d848461096e565b90506000198114610d955781811015610d885760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048a565b610d958484848403610ba3565b50505050565b6001600160a01b038316610dff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048a565b6001600160a01b038216610e615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048a565b6001600160a01b03831660009081526020819052604090205481811015610ed95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d95565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260065403610fe35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161048a565b6002600655565b6001600160a01b0382166110405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048a565b80600260008282546110529190611208565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156110d6578581018301518582016040015282016110ba565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461110e57600080fd5b919050565b6000806040838503121561112657600080fd5b61112f836110f7565b946020939093013593505050565b60006020828403121561114f57600080fd5b611158826110f7565b9392505050565b60008060006060848603121561117457600080fd5b61117d846110f7565b925061118b602085016110f7565b9150604084013590509250925092565b600080604083850312156111ae57600080fd5b6111b7836110f7565b91506111c5602084016110f7565b90509250929050565b600181811c908216806111e257607f821691505b60208210810361120257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561041f57634e487b7160e01b600052601160045260246000fdfea2646970667358221220d7f38292b9815d2df42fb89d2a6867c08fae66768c12f9e2749234bd91f1520064736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370480275116100c3578063a457c2d71161007c578063a457c2d7146102f7578063a9059cbb1461030a578063dd62ed3e1461031d578063ddb5975114610330578063f2fde38b14610343578063fd66091e1461035657600080fd5b8063704802751461027d57806370a0823114610290578063715018a6146102b95780638da5cb5b146102c157806395d89b41146102dc57806397a6278e146102e457600080fd5b806323b872dd1161011557806323b872dd146101e657806324d7806c146101f9578063313ce567146102255780633950935114610234578063429b62e5146102475780636d88b24d1461026a57600080fd5b806306fdde0314610152578063095ea7b3146101705780631785f53c1461019357806318160ddd146101a85780631ffbb064146101ba575b600080fd5b61015a610379565b60405161016791906110a9565b60405180910390f35b61018361017e366004611113565b61040b565b6040519015158152602001610167565b6101a66101a136600461113d565b610425565b005b6002545b604051908152602001610167565b6101836101c836600461113d565b6001600160a01b031660009081526008602052604090205460ff1690565b6101836101f436600461115f565b6104dc565b61018361020736600461113d565b6001600160a01b031660009081526007602052604090205460ff1690565b60405160128152602001610167565b610183610242366004611113565b610500565b61018361025536600461113d565b60076020526000908152604090205460ff1681565b6101a661027836600461113d565b610522565b6101a661028b36600461113d565b610699565b6101ac61029e36600461113d565b6001600160a01b031660009081526020819052604090205490565b6101a66107b7565b6005546040516001600160a01b039091168152602001610167565b61015a6107cb565b6101a66102f236600461113d565b6107da565b610183610305366004611113565b6108e5565b610183610318366004611113565b610960565b6101ac61032b36600461119b565b61096e565b6101a661033e366004611113565b610999565b6101a661035136600461113d565b610b2a565b61018361036436600461113d565b60086020526000908152604090205460ff1681565b606060038054610388906111ce565b80601f01602080910402602001604051908101604052809291908181526020018280546103b4906111ce565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b600033610419818585610ba3565b60019150505b92915050565b61042d610cc7565b6001600160a01b03811660009081526007602052604090205460ff166104935760405162461bcd60e51b81526020600482015260166024820152752730ba3ab932aa37b5b2b71d103737ba1030b236b4b760511b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260076020526040808220805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f9190a250565b6000336104ea858285610d21565b6104f5858585610d9b565b506001949350505050565b600033610419818585610513838361096e565b61051d9190611208565b610ba3565b3360009081526007602052604090205460ff166105815760405162461bcd60e51b815260206004820181905260248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015260640161048a565b6001600160a01b0381166105e25760405162461bcd60e51b815260206004820152602260248201527f4e6174757265546f6b656e3a20696e76616c6964206167656e74206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b03811660009081526008602052604090205460ff161561064b5760405162461bcd60e51b815260206004820152601a60248201527f4e6174757265546f6b656e3a20616c7265616479206167656e74000000000000604482015260640161048a565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055513392917fa0ab0df49b9b83562b0f6f42b7ee4cf49522b8f506e687d6b0e55d729613272e91a350565b6106a1610cc7565b6001600160a01b0381166107025760405162461bcd60e51b815260206004820152602260248201527f4e6174757265546f6b656e3a20696e76616c69642061646d696e206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b03811660009081526007602052604090205460ff161561076b5760405162461bcd60e51b815260206004820152601a60248201527f4e6174757265546f6b656e3a20616c72656164792061646d696e000000000000604482015260640161048a565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b6107bf610cc7565b6107c96000610f3f565b565b606060048054610388906111ce565b3360009081526007602052604090205460ff166108395760405162461bcd60e51b815260206004820181905260248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015260640161048a565b6001600160a01b03811660009081526008602052604090205460ff1661089a5760405162461bcd60e51b815260206004820152601660248201527513985d1d5c99551bdad95b8e881b9bdd081859d95b9d60521b604482015260640161048a565b6001600160a01b038116600081815260086020526040808220805460ff19169055513392917f4ce8b3fe8e0bf47a6fefbecdfd7c799755cede6061655521b10fc2e4b1fcc6b391a350565b600033816108f3828661096e565b9050838110156109535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161048a565b6104f58286868403610ba3565b600033610419818585610d9b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360009081526007602052604090205460ff16806109c657503360009081526008602052604090205460ff165b610a245760405162461bcd60e51b815260206004820152602960248201527f4e6174757265546f6b656e3a2063616c6c6572206973206e6f742061646d696e604482015268081bdc881859d95b9d60ba1b606482015260840161048a565b610a2c610f91565b6001600160a01b038216610a825760405162461bcd60e51b815260206004820152601e60248201527f4e6174757265546f6b656e3a20696e76616c696420726563697069656e740000604482015260640161048a565b60008111610ad25760405162461bcd60e51b815260206004820152601b60248201527f4e6174757265546f6b656e3a20696e76616c696420616d6f756e740000000000604482015260640161048a565b610adc8282610fea565b60405181815233906001600160a01b038416907fe89b93cedab3d9ce98a9b35004e19ddf26ee16a3c13abbbdea4a1f6b353674e29060200160405180910390a3610b266001600655565b5050565b610b32610cc7565b6001600160a01b038116610b975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048a565b610ba081610f3f565b50565b6001600160a01b038316610c055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048a565b6001600160a01b038216610c665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146107c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048a565b6000610d2d848461096e565b90506000198114610d955781811015610d885760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048a565b610d958484848403610ba3565b50505050565b6001600160a01b038316610dff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048a565b6001600160a01b038216610e615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048a565b6001600160a01b03831660009081526020819052604090205481811015610ed95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d95565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260065403610fe35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161048a565b6002600655565b6001600160a01b0382166110405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048a565b80600260008282546110529190611208565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156110d6578581018301518582016040015282016110ba565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461110e57600080fd5b919050565b6000806040838503121561112657600080fd5b61112f836110f7565b946020939093013593505050565b60006020828403121561114f57600080fd5b611158826110f7565b9392505050565b60008060006060848603121561117457600080fd5b61117d846110f7565b925061118b602085016110f7565b9150604084013590509250925092565b600080604083850312156111ae57600080fd5b6111b7836110f7565b91506111c5602084016110f7565b90509250929050565b600181811c908216806111e257607f821691505b60208210810361120257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561041f57634e487b7160e01b600052601160045260246000fdfea2646970667358221220d7f38292b9815d2df42fb89d2a6867c08fae66768c12f9e2749234bd91f1520064736f6c63430008140033",
  "devdoc": {
    "details": "Implements a role-based system with Owner, Admins, and Agents Owner: Contract deployer, can manage admins Admins: Can manage agents Agents: AI-powered reward distributors",
    "events": {
      "AdminAdded(address)": {
        "params": {
          "admin": "Address of the new admin"
        }
      },
      "AdminRemoved(address)": {
        "params": {
          "admin": "Address of the removed admin"
        }
      },
      "AgentAuthorized(address,address)": {
        "params": {
          "addedBy": "Admin who authorized the agent",
          "agent": "Address of the new agent"
        }
      },
      "AgentRemoved(address,address)": {
        "params": {
          "agent": "Address of the removed agent",
          "removedBy": "Admin who removed the agent"
        }
      },
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "details": "Only callable by contract owner",
        "params": {
          "newAdmin": "Address to be added as admin"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "authorizeAgent(address)": {
        "details": "Only callable by admins",
        "params": {
          "agent": "Address to be authorized as agent"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "params": {
          "initialAdmin": "Address of the first admin"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "fundTokens(address,uint256)": {
        "details": "Only callable by admins or agents",
        "params": {
          "amount": "Amount of tokens to mint",
          "to": "Address to receive the minted tokens"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isAdmin(address)": {
        "params": {
          "account": "Address to check"
        },
        "returns": {
          "_0": "bool True if address is admin"
        }
      },
      "isAgent(address)": {
        "params": {
          "account": "Address to check"
        },
        "returns": {
          "_0": "bool True if address is agent"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAdmin(address)": {
        "details": "Only callable by contract owner",
        "params": {
          "admin": "Address to be removed from admins"
        }
      },
      "removeAgent(address)": {
        "details": "Only callable by admins",
        "params": {
          "agent": "Address to be removed from agents"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "NatureToken",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AdminAdded(address)": {
        "notice": "Emitted when a new admin is added"
      },
      "AdminRemoved(address)": {
        "notice": "Emitted when an admin is removed"
      },
      "AgentAuthorized(address,address)": {
        "notice": "Emitted when a new agent is authorized"
      },
      "AgentRemoved(address,address)": {
        "notice": "Emitted when an agent is removed"
      }
    },
    "kind": "user",
    "methods": {
      "addAdmin(address)": {
        "notice": "Add a new admin"
      },
      "authorizeAgent(address)": {
        "notice": "Authorize a new agent"
      },
      "constructor": {
        "notice": "Contract constructor"
      },
      "fundTokens(address,uint256)": {
        "notice": "Mint tokens to specified address"
      },
      "isAdmin(address)": {
        "notice": "Check if an address is an admin"
      },
      "isAgent(address)": {
        "notice": "Check if an address is an agent"
      },
      "removeAdmin(address)": {
        "notice": "Remove an admin"
      },
      "removeAgent(address)": {
        "notice": "Remove an agent"
      }
    },
    "notice": "ERC20 token for Nature Quest's reward system on Mode Network",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 193,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 199,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 201,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 203,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 205,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "_status",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 905,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "admins",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 909,
        "contract": "contracts/NatureToken.sol:NatureToken",
        "label": "agents",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}